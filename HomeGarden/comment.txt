//==================================================//
//  MARK: - ファイル名.swift
//  作成者: [あなたの名前]
//  作成日: [YYYY/MM/DD]
//  説明  : このファイルの概要を記述
//==================================================//

import Foundation
import UIKit

//==================================================//
//  MARK: - 定数 / 列挙型
//==================================================//

/// アプリ内のテーマカラー
enum AppColor {
    static let primary = UIColor.systemBlue
    static let secondary = UIColor.systemGray
}

//==================================================//
//  MARK: - クラス / 構造体
//==================================================//

/// サンプルビューコントローラー
/// - Note: このVCはデモ用で、本番ではカスタマイズが必要
class SampleViewController: UIViewController {
    
    //==================================================//
    //  MARK: - IBOutlet
    //==================================================//
    
    @IBOutlet weak var titleLabel: UILabel!
    
    //==================================================//
    //  MARK: - Properties
    //==================================================//
    
    /// ボタンタップ回数
    private var tapCount: Int = 0
    
    //==================================================//
    //  MARK: - View Lifecycle
    //==================================================//
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
    }
    
    //==================================================//
    //  MARK: - UI Setup
    //==================================================//
    
    /// UI初期化
    private func setupUI() {
        titleLabel.text = "Hello World"
    }
    
    //==================================================//
    //  MARK: - Actions
    //==================================================//
    
    /// ボタンタップ時の処理
    /// - Parameter sender: タップされたボタン
    @IBAction func buttonTapped(_ sender: UIButton) {
        tapCount += 1
        print("タップ回数: \(tapCount)")
    }
    
    //==================================================//
    //  MARK: - Helper Methods
    //==================================================//
    
    /// 例: 複雑な処理の説明
    /// - Returns: 計算結果
    private func complexCalculation() -> Int {
        // FIXME: アルゴリズム最適化が必要
        return tapCount * 2
    }
    
    //==================================================//
    //  MARK: - TODO
    //==================================================//
    
    // TODO: ネットワーク処理を実装
    // TODO: ユーザー設定保存機能を追加
}
